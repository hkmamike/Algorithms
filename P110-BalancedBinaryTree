# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        self.balancedSoFar = True

        def calculateDepth(node):
            if not node:
                return 0

            depthLeft = calculateDepth(node.left)
            depthRight = calculateDepth(node.right)
            if abs(depthLeft - depthRight) > 1:
                self.balancedSoFar = False
            return max(depthLeft, depthRight) + 1

        unused = calculateDepth(root)
        return self.balancedSoFar